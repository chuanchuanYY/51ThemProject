C51 COMPILER V9.54   MAIN                                                                  05/17/2023 16:20:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keil-v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Delay.h"
   3          #include "UART.h"
   4          #include "DS18B20.h"
   5          void SendMessage(unsigned char* msg,int len);
   6          unsigned int crc_cal_value(unsigned char* data_value, unsigned char data_length);
   7          unsigned int CRC;
   8          void writeCoils(int CoilsAddr,int onoff);
   9           void resultKeepRegister(int StartAddr,int RegisterDataPort);
  10          unsigned char Message[8]={0x01,0x03,0x00,0x00,0x00,0x01};//用于接收报文
  11          int mesgIndex=0;
  12          char mesgFlag=0;
  13          int LEDFlag=0;
  14          float T;//DS18B20温度值
  15          char SlaveAddr=0x01;//从机地址
  16          //unsigned char FunCode[10]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09};//功能码
  17          int Addr;//线圈地址或寄存器起始地址
  18          unsigned char Register[2];//一个寄存器2个字节
  19          int RegiNumber;//寄存器数量
  20          void main()
  21          {  
  22   1         DS18B20_ConvertT();    //上电先转换一次温度，防止第一次读数据错误
  23   1         Delay(1000);
  24   1         UART_Init();   //串口初始化
  25   1         CRC=crc_cal_value(Message,sizeof(Message)-2);
  26   1         Message[6]=(unsigned char)CRC;
  27   1         Message[7]=(unsigned char)(CRC>>8);
  28   1         SendMessage(Message,sizeof(Message));
  29   1        P1_0=0;
  30   1        while(1)
  31   1        {  
  32   2              DS18B20_ConvertT(); //转换温度
  33   2              T=DS18B20_ReadT();  //读取温度
  34   2              Register[1]=(char)T;
  35   2             /*  Delay(1000);
  36   2              UART_SendByte((char)T);
  37   2             */
  38   2            if(mesgFlag ==1 )//接收到8位报文
  39   2            {
  40   3              mesgIndex=0;
  41   3              mesgFlag=0;
  42   3              CRC=crc_cal_value(Message,sizeof(Message)-2);
  43   3              if(Message[6]==(unsigned char)CRC &&  Message[7]==(unsigned char)(CRC>>8))//验证CRC
  44   3              {
  45   4                  Addr=(Message[2]<<8);//
  46   4                  Addr|=Message[3];
  47   4                   RegiNumber=(Message[4]<<8);
  48   4                  RegiNumber|=Message[5];
  49   4                  switch(Message[1])//判断功能码
  50   4                  {
  51   5                    case 0x05:writeCoils(Addr,Message[4]==0xFF?0:1);
  52   5                      break;
  53   5                    case 0x03:resultKeepRegister(Addr,RegiNumber);
  54   5                      break;
C51 COMPILER V9.54   MAIN                                                                  05/17/2023 16:20:51 PAGE 2   

  55   5                  }
  56   4              }
  57   3            }
  58   2        //  P2_5=0;给0亮
  59   2        }
  60   1      }
  61          
  62          void SendMessage(unsigned char* msg,int len)
  63          {
  64   1        int i=0;
  65   1        for(i=0;i<len;i++)
  66   1        {
  67   2          UART_SendByte(msg[i]);
  68   2        }
  69   1      }
  70          void UART_Routine() interrupt 4
  71          {
  72   1        if(RI==1)         //如果接收标志位为1，接收到了数据
  73   1        {
  74   2            // P2=~SBUF;        //读取数据，取反后输出到LED
  75   2          if(mesgIndex>=8)return;
  76   2            Message[mesgIndex]=SBUF;//
  77   2            mesgIndex++;
  78   2            if(mesgIndex>=8)
  79   2            {
  80   3              mesgFlag=1;
  81   3              mesgIndex=0;
  82   3            }
  83   2          RI=0;         //接收标志位清0
  84   2        }
  85   1      }
  86          unsigned int crc_cal_value(unsigned char* data_value, unsigned char data_length)
  87          {
  88   1          int i;
  89   1          unsigned short crc_value = 0xffff;
  90   1          while (data_length--) 
  91   1          {
  92   2              crc_value ^= *data_value++;
  93   2              for (i = 0; i < 8; i++)
  94   2              {
  95   3                  if (crc_value & 0x0001)
  96   3                      crc_value = (crc_value >> 1) ^ 0xA001;
  97   3                  else
  98   3                      crc_value = crc_value >> 1;
  99   3              }
 100   2          }
 101   1          return(crc_value);
 102   1       }
 103          
 104           //写线圈
 105           void writeCoils(int CoilsAddr,int onoff)
 106           {
 107   1         switch(CoilsAddr)
 108   1         {
 109   2            case 0: P2_0=onoff;
 110   2             break;
 111   2            case 1: P2_1=onoff;
 112   2             break;
 113   2            case 2: P2_2=onoff;
 114   2             break;
 115   2            case 3: P2_3=onoff;
 116   2             break;
C51 COMPILER V9.54   MAIN                                                                  05/17/2023 16:20:51 PAGE 3   

 117   2            case 4: P2_4=onoff;
 118   2             break;
 119   2            case 5: P2_5=onoff;
 120   2             break;
 121   2            case 6: P2_6=onoff;
 122   2             break;
 123   2            case 7: P2_7=onoff;
 124   2             break;
 125   2           case 8: P1_0=onoff==1?0:1;//风扇
 126   2             break;
 127   2         }
 128   1         SendMessage(Message,sizeof(Message));
 129   1       }
 130          
 131           //读保持型寄存器
 132           int j=0;
 133           unsigned int crcValue;
 134           void resultKeepRegister(int StartAddr,int RegisterDataPort)//起始地址 和寄存器数
 135           {
 136   1         unsigned char retuleMsg[80];
 137   1         int retuleMsgLenth=3;
 138   1         retuleMsg[0]=SlaveAddr;
 139   1         retuleMsg[1]=0x03;
 140   1         retuleMsg[2]=((char)RegisterDataPort)*2;
 141   1         j=0;
 142   1         for(j=StartAddr;j<RegisterDataPort*2;j++)
 143   1         {
 144   2           if(j>=sizeof(Register))break;
 145   2           retuleMsg[j+3] =Register[j];
 146   2           retuleMsgLenth++;
 147   2         }
 148   1           crcValue =crc_cal_value(retuleMsg,retuleMsgLenth);
 149   1           retuleMsg[retuleMsgLenth++]=(unsigned char)crcValue;
 150   1           retuleMsg[retuleMsgLenth++]=(unsigned char)(crcValue>>8);
 151   1           SendMessage(retuleMsg,retuleMsgLenth);
 152   1       }
 153           
 154            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    679    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     30      95
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
